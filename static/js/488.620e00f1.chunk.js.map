{"version":3,"file":"static/js/488.620e00f1.chunk.js","mappings":"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","sources":["components/ImportModal/import-worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n\nimport JSZip from \"jszip\";\n\nself.onmessage = async (e: MessageEvent<File>) => {\n    //console.log(`Worker: got ${e.data.name}`)\n    const opfsRoot = await navigator.storage.getDirectory();\n    const defaultDirectory = await opfsRoot.getDirectoryHandle(\"default\", {\n        create: true,\n    });\n    const unzippedDirectory = await defaultDirectory.getDirectoryHandle(e.data.name, {\n        create: true,\n    });\n\n    JSZip.loadAsync(await e.data.arrayBuffer())\n        .then(function (zip) {\n            zip.forEach(async function (relativePath, zipEntry) {\n                const fileHandle = await unzippedDirectory.getFileHandle(zipEntry.name, {\n                    create: true,\n                });\n                // @ts-ignore\n                // Thinks property 'createSyncAccessHandle' does not exist on type 'FileSystemFileHandle' for some reason\n                const accessHandle = await fileHandle.createSyncAccessHandle();\n                const fileData = await zipEntry.async('arraybuffer');\n                accessHandle.write(fileData)\n                accessHandle.close()\n            });\n        }, function (e) {\n            console.log(`Worker: got error ${e}`)\n        });\n\n    self.postMessage(`Saved ${e.data.name}`);\n};\n\nexport { };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [159], () => (__webpack_require__(488)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"74658abe\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/cardholder/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t488: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcardholder\"] = self[\"webpackChunkcardholder\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(159).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["self","onmessage","async","opfsRoot","navigator","storage","getDirectory","defaultDirectory","getDirectoryHandle","create","unzippedDirectory","e","data","name","JSZip","arrayBuffer","then","zip","forEach","relativePath","zipEntry","fileHandle","getFileHandle","accessHandle","createSyncAccessHandle","fileData","write","close","console","log","concat","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop","next"],"sourceRoot":""}